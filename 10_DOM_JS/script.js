///////////////////////////////////////////////////////////////////////////////////
///////////////// 1. Comprendre le DOM
///////////////////////////////////////////////////////////////////////////////////

// Le DOM (Document Object Model) représente la structure HTML sous forme d'objet JS.
// Chaque élément HTML est un nœud que l'on peut manipuler.
// console.log(document); // Affiche l'objet DOM complet



///////////////////////////////////////////////////////////////////////////////////
///////////////// 2. Le Query Selector
///////////////////////////////////////////////////////////////////////////////////
// const title= document.getElementsByClassName('header')
// console.log(title[0].innerText)

// Permet de sélectionner un élément avec un sélecteur CSS.
// const titre = document.querySelector('h1');
// console.log(titre.textContent);


const input = document.querySelector('.my-input')
console.log(input)



///////////////////////////////////////////////////////////////////////////////////
///////////////// 3. Autres techniques pour interagir avec le DOM
///////////////////////////////////////////////////////////////////////////////////

// Quelques alternatives : getElementById, getElementsByClassName, getElementsByTagName
// const bouton = document.getElementById('btn');
// const items = document.getElementsByClassName('item');
// const divs = document.getElementsByTagName('div');



///////////////////////////////////////////////////////////////////////////////////
///////////////// 4. Changer et ajouter du contenu à la page
///////////////////////////////////////////////////////////////////////////////////

// const paragraphe = document.querySelector('p');
// paragraphe.textContent = 'Nouveau texte ajouté !';
// paragraphe.innerHTML += '<strong> Texte en gras </strong>';



///////////////////////////////////////////////////////////////////////////////////
///////////////// 5. Récupérer et modifier un attribut d’un DOM
///////////////////////////////////////////////////////////////////////////////////

// const image = document.querySelector('img');
// console.log(image.getAttribute('src'));
// image.setAttribute('alt', 'Nouvelle description');



///////////////////////////////////////////////////////////////////////////////////
///////////////// 6. Changer le style CSS
///////////////////////////////////////////////////////////////////////////////////

// const box = document.querySelector('.box');
// box.style.backgroundColor = 'blue';
// box.style.padding = '20px';



///////////////////////////////////////////////////////////////////////////////////
///////////////// 7. Ajouter et supprimer une classe depuis un DOM
///////////////////////////////////////////////////////////////////////////////////

// const titre2 = document.querySelector('h2');
// titre2.classList.add('active');
// titre2.classList.remove('hidden');
// titre2.classList.toggle('highlight');



///////////////////////////////////////////////////////////////////////////////////
///////////////// 8. Handling Parent / Children DOM
///////////////////////////////////////////////////////////////////////////////////

// const container = document.querySelector('.container');
// const firstChild = container.firstElementChild;
// const parent = firstChild.parentElement;
// console.log(parent, firstChild);



///////////////////////////////////////////////////////////////////////////////////
///////////////// 9. addEventListener - Event Click
///////////////////////////////////////////////////////////////////////////////////

// const button = document.querySelector('#myBtn');
// button.addEventListener('click', () => {
//     alert('Bouton cliqué !');
// });



///////////////////////////////////////////////////////////////////////////////////
///////////////// 10. Ajouter & Supprimer un élément du DOM
///////////////////////////////////////////////////////////////////////////////////

// const ul = document.querySelector('ul');
// const li = document.createElement('li');
// li.textContent = 'Nouvel élément';
// ul.appendChild(li); // Ajout
// li.remove(); // Suppression



///////////////////////////////////////////////////////////////////////////////////
///////////////// 11. Event Propagation & Delegation
///////////////////////////////////////////////////////////////////////////////////

// Capture ou bubbling (par défaut : bubbling)
// document.querySelector('#parent').addEventListener('click', (e) => {
//     console.log('Parent cliqué');
// });

// document.querySelector('#child').addEventListener('click', (e) => {
//     e.stopPropagation(); // Empêche la propagation vers le parent
//     console.log('Enfant cliqué');
// });

// Délégation : utile quand les enfants sont dynamiques
// document.querySelector('#liste').addEventListener('click', (e) => {
//     if (e.target.tagName === 'LI') {
//         console.log('Item cliqué :', e.target.textContent);
//     }
// });



///////////////////////////////////////////////////////////////////////////////////
///////////////// 12. Autres événements : copy, mousemove
///////////////////////////////////////////////////////////////////////////////////

// document.addEventListener('copy', () => {
//     alert('Vous avez copié quelque chose');
// });

// document.addEventListener('mousemove', (e) => {
//     console.log(`Souris à ${e.clientX}, ${e.clientY}`);
// });



///////////////////////////////////////////////////////////////////////////////////
///////////////// 13. Les formulaires et les événements
///////////////////////////////////////////////////////////////////////////////////

// const form = document.querySelector('form');
// form.addEventListener('submit', (e) => {
//     e.preventDefault(); // Empêche l'envoi
//     const nom = document.querySelector('#nom').value;
//     alert('Nom saisi : ' + nom);
// });

///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////